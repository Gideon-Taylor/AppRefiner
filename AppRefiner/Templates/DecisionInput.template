{
  "templateName": "Decision Input",
  "description": "Basic Decision Input",
  "inputs": [
    {
      "id": "class_name",
      "label": "Class Name",
      "type": "string",
      "required": true,
      "defaultValue": "MyInput",
      "description": "The name of the class to generate"
    },
    {
      "id": "uses_product_options",
      "label": "Uses Product Options",
      "type": "boolean",
      "required": true,
      "defaultValue": "false",
      "description": "Whether this class uses product options"
    },
    {
      "id": "product_id",
      "label": "Product ID",
      "type": "string",
      "required": false,
      "defaultValue": "",
      "description": "The product ID to use",
      "displayCondition": {
        "field": "uses_product_options",
        "operator": "equals",
        "value": true
      }
    }
  ]
}
---
import IS_DX_INPUT:InputDefinition;
{{#if uses_product_options}}
import IS_CO_BASE:Utility:Product;

{{/if}}
class {{class_name}} extends IS_DX_INPUT:InputDefinition
{{#if uses_product_options}}
   method {{class_name}}();
{{/if}}
   method IsValid(&sCurrentValue As string) Returns boolean;
protected
   method PopulateChoices();
{{#if uses_product_options}}
private
   instance IS_CO_BASE:Utility:Product &{{product_id}}Product;
{{/if}}
end-class;

{{#if uses_product_options}}
method {{class_name}}
   /+ Extends/implements IS_DX_INPUT:InputDefinition +/
   %Super = create IS_DX_INPUT:InputDefinition();
   &{{product_id}}Product = create IS_CO_BASE:Utility:Product("{{product_id}}");
end-method;

{{/if}}
method IsValid
   /+ &sCurrentValue as String +/
   /+ Returns Boolean +/
   /+ Extends/implements IS_DX_INPUT:InputDefinition.IsValid +/
   Return True;
end-method;

method PopulateChoices
   %Super.PopulateChoices();  
   
   /* Add your custom code here */
   [[cursor]]
end-method;
